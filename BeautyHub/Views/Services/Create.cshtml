@model BeautyHub.Entities.Service

@{
    Layout = "~/Views/Shared/_Dashboardlayout.cshtml";
    ViewBag.Title = "Admin Services";
}

<section class="create-category create">
    <div class="create-form-card bg-light mx-auto col-xl-6 col-md-6 col-12 mb-xl-4 mb-lg-3 pt-4 pb-4">
        <h2 class="text-center">Create Category</h2>
        @using (Html.BeginForm("Create", "Services", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal d-flex justify-content-center align-items-center">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-xl-10 col-md-10 form-group mx-auto mb-xl-4 mb-lg-3">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xl-10 col-md-10 form-group mx-auto mb-xl-4 mb-lg-3">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xl-10 col-md-10 form-group mx-auto mb-xl-4 mb-lg-3">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xl-10 col-md-10 form-group mx-auto mb-xl-4 mb-lg-3">
                        @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="">
                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-xl-10 col-md-10 mx-auto form-group mb-xl-2 mb-lg-2 image-box">
                        @*@Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })*@
                        <div class="upload-icon d-flex justify-content-center align-items-center">
                            <input type='file' accept=".png, .jpg, .jpeg" name="servicePic" id="servicePic" onchange="readURL(this);" class="inputfile" />
                            <label for="servicePic" class="photo-uploader">
                                <i class="fas fa-upload"></i>
                            </label>
                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                        </div>

                        <div class="mx-auto image-holder d-flex justify-content-center">
                            <img id="service-image" src="~/Content/images/image_placeholder.jpg" />
                        </div>
                    </div>



                    <div class="col-xl-10 col-md-10 form-group mx-auto mb-xl-4 mb-lg-3">
                        <div class="">
                            <input type="submit" value="Create" class="btn btn-success submit-btn w-100 mt-3" />
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="d-flex justify-content-center">
            @Html.ActionLink("Back to List", "Index", new { }, new { @class = "backto-list btn btn-primary" })
        </div>
    </div>
</section>






@*@using (Html.BeginForm("Create","Services",FormMethod.Post,new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Service</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <input type='file' accept=".png, .jpg, .jpeg" name="servicePic" onchange="readURL(this);" />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-2">
            <img id="service-image" src="#"/>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script src="~/Scripts/jquery-3.4.1.js"></script>

<script>

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#service-image')
                    .attr('src', e.target.result)
                    .width(150);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

</script>